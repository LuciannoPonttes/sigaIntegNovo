// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SigaDocIntegracao.Web.Persistence;

#nullable disable

namespace SigaDocIntegracao.Web.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241013220023_TabelaUsuario")]
    partial class TabelaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PermissaoUsuario", b =>
                {
                    b.Property<Guid>("PermissoesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uuid");

                    b.HasKey("PermissoesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("PermissaoUsuario");
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.Models.ModuloEmail.DocAssinadoEmailHistoricoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_DOCUMENTO_NOME");

                    b.Property<bool>("Enviado")
                        .HasColumnType("boolean")
                        .HasColumnName("FLG_STATUS_ENVIADO");

                    b.HasKey("Id");

                    b.ToTable("CAD_MODELO_EMAIL_HIST");
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.Models.ModuloEmail.ExModeloEmailParamModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_ASSUNTO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("FLG_STATUS_ATIVO");

                    b.Property<string>("ConteudoEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_CONTEUDO_EMAIL");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DTH_CRIACAO_NOT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DTH_INICIO_ENVIO");

                    b.Property<DateTime>("DataUltimoProcessamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DTH_ULTIMO_PROCESSAMENTO");

                    b.Property<string>("DescricaoModelo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_DESCRICAO_MODELO");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_DESTINATARIOS_EMAILS");

                    b.Property<string>("IdSigaDoc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ID_SIGA_DOC");

                    b.Property<string>("NomeNot")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TXT_NOME_NOT");

                    b.HasKey("Id");

                    b.ToTable("CAD_MODELO_NOTIF_EMAIL");
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.UsuarioContexto.Models.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.ToTable("tb_permissao");
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.UsuarioContexto.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Email");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Matricula");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("Nome");

                    b.Property<string>("NomeNormalizado")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("NomeNormalizado");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("StatusCadastro")
                        .HasColumnType("integer")
                        .HasColumnName("StatusCadastro");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("Tipo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.ToTable("tb_usuario");
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.UsuarioContexto.Models.UsuarioPermissao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("permissao_id");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tb_usuario_permissao");
                });

            modelBuilder.Entity("PermissaoUsuario", b =>
                {
                    b.HasOne("SigaDocIntegracao.Web.UsuarioContexto.Models.Permissao", null)
                        .WithMany()
                        .HasForeignKey("PermissoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigaDocIntegracao.Web.UsuarioContexto.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SigaDocIntegracao.Web.UsuarioContexto.Models.UsuarioPermissao", b =>
                {
                    b.HasOne("SigaDocIntegracao.Web.UsuarioContexto.Models.Permissao", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigaDocIntegracao.Web.UsuarioContexto.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
